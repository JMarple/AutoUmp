#include "io.h"
#include <stdio.h>
#include <timer.h>
#include <stdint.h>

// Game Internals
uint8_t balls;
uint8_t strikes;
uint8_t outs;
uint8_t height;

float lastBallx;
float lastBally;

uint8_t inning;
char topOrBottom;
uint8_t home; // score
uint8_t away; // score


void sendGameStatus(chanend x)
{
    char output[30];

    // Format: BB_SS_OO_HH_XX.XXX_YY.YYY
    snprintf(output, 30, "%01d %01d %01d %02d %06.3f %06.3f\n",
        balls, strikes, outs, height, lastBallx, lastBally);

    for (int i = 0; i < 30; i++)
    {
        x <: output[i];

        if (output[i] == '\n') break;
    }
}



/*
 * Gets and updates game/batter data, as sent by the app.
 *
 * The XMOS will receive the following 5 byte string:
 * "C HH\n"
 * HH is an integer between 00-99, and represents the height of the batter in inches.
 * C is an integer between 0-8, and represents the command the user has executed.
 * Commands:
 *  0: change height
 *  1: ball increment
 *  2: strike increment
 *  3: out increment
 *  4: clear count
 *  5: undo last command
 *  6: home score increment
 *  7: inning increment
 *  8: away score increment
 */
void getGameStatus(streaming chanend x)
{
    // Parse message.
    char input[5];

    for (int i = 0; i < 30; i++)
    {
       x :> input[i];
       if (input[i] == '\n') break;
    }

    // update information
    switch(input[0])
    {
        case '0': // change height
            uint8_t high = input[2] - '0';
            uint8_t low  = input[3] - '0';
            height = high*10 + low;
            break;

        case '1': // ball increment
            balls = (balls + 1) % 4;
            break;

        case '2': // strike increment
            strikes = (strikes + 1) % 3;
            break;

        case '3':
            break;

        case '4':
            break;

        case '5':
            break;

        case '6':
            break;

        case '7':
            break;

        case '8':
            break;

        default:
            break;
    }

    sscanf(input, "%01d %01d %01d %02d %06.3f %06.3f\n",
            balls, strikes, outs, height, lastBallx, lastBally);
}

void testing(chanend x)
{
    while (1==1)
    {
        balls = 2;
        strikes = 1;
        height = 72;
        lastBallx = 50.000;
        lastBally = 50.000;

        sendGameStatus(x);
        delay_milliseconds(200);
    }
}

void recievedData(streaming chanend y)
{
    while (1==1)
    {
        //getGameStatus(y);
        //printf("DtaOut = %c\n", input);
    }
}

int main()
{
    //printf("--- UART Tester ---\n");
    chan x;
    streaming chan y;
    par
    {
        BluetoothTxThread(x);
        testing(x);
        recievedData(y);
        BluetoothRxThread(y);
    }
    return 0;
}

