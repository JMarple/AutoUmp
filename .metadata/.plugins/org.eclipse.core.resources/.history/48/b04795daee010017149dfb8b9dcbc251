#ifndef UTIL_H
#define UTIL_H

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>
#include "main.hpp"
//#include "CuTest.h"

#define FUNC_ERROR -1

// A [square] ball in an image.
struct Ball
{
    uint8_t x, y; // note: x is down, y is to the right. 0,0 is top left.
    uint8_t length; // length of square
    uint8_t val; // value we give the elements of the ball
};

void rowByte2Bit(
    uint8_t* byte_row,
    uint8_t* bit_row,
    uint32_t width);

void picByte2Bit(
    uint8_t* bytePicture,
    uint8_t* bitPicture,
    uint32_t width,
    uint32_t height);

void printBitPic(
    uint8_t* bitPicture,
    uint32_t width,
    uint32_t height,
    uint8_t colorRed);

uint8_t getBitInPic(
    uint8_t* bitPicture,
    uint32_t bitIndex);

uint8_t getBitInByte(
    uint8_t byte,
    uint32_t bitLoc);

int8_t setBitInPic(
    uint8_t* bitPicture,
    uint32_t bitIndex,
    uint8_t val);

int8_t setBitInByte(
    uint8_t* byte,
    uint8_t bitLoc,
    uint8_t bitVal);

void printPicture(
    uint8_t* picture,
    uint32_t width,
    uint32_t height,
    uint8_t colorRed);

int32_t ipow32t(int32_t base, int32_t exp);

/*
void testGetBitInByte(CuTest* tc);
void testSetBitInByte_ToOne(CuTest* tc);
void testSetBitInByte_ToZero(CuTest* tc);
void testSetBitInByte_ExceedByte(CuTest* tc);
void testSetBitInPic_FirstByte(CuTest* tc);
void testSetBitInPic_LastByte(CuTest* tc);
void testSetBitInPic_ExceedImage(CuTest* tc);
void testSetBitInByte_RandoByte(CuTest* tc);
void testSetThenGetBit_Byte(CuTest* tc);*/

#endif
