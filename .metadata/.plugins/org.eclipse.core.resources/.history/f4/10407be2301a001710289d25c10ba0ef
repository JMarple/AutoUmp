#ifndef __OV07740_H__
#define __OV07740_H__

#include <stdint.h>
#include "algs.h"

#define BACKGROUND_SUBTRACTION_THRESHOLD 10

// Establishes communication with the cameras
// Returns 3 if both cameras are connected
//         1 or 2 if only one camera is connected
//         0 if an error
int OV07740_InitCameras();

// Configures settings over sccb with cameras.
// Returns 0 if an error occured
int OV07740_ConfigureCameras();

void launchCameras(chanend uart1);

void OV07740_MasterThread(
    streaming chanend cams[],
    interface MasterToFloodFillInter client m2ff_tile1[],
    interface MasterToFloodFillInter client m2ff_tile0[]);

void OV07740_GatherDataThread(
    streaming chanend cmdStream,
    port* unsafe camDATA);

void computeBackgroundSub(
    uint8_t* unsafe tmp,
    uint8_t* unsafe old,
    uint8_t* unsafe bit,
    int threshold);

struct SCCBPairs
{
    uint8_t reg;
    uint8_t value;
};

#define CAM_SCCB_ID 0x21

// Product ID = 0x7740
#define CAM_PRODUCT_MSB 0x0A
#define CAM_PRODUCT_LSB 0x0B

#define CAM_HAEC 0x0F // Exposure msb
#define CAM_AEC 0x10 // Exposure lsb

// AutoUmp RevA specific port bit's
// This is needed since the HREF/VSYNC's share the same
// 8-bit port for both cameras.
#define AU_HREF1  (1 << 4)
#define AU_VSYNC1 (1 << 5)
#define AU_HREF2  (1 << 6)
#define AU_VSYNC2 (1 << 7)

/*static struct SCCBPairs OV7740_QVGA[] =
{
    // Activates HOUTSIZE, VOUTSIZE.  IDK why.
    {0x12, 0x00},

    // Turns off AEC/AGC algorithms
    {0x13, 0x00},

    // Set Gain
    {0x00, 0xFF}, // LSB [0:7]
    {0x15, 0x02}, // MSB [0:1]

    // Set Image Size to 320x240
    // Set HOUTSIZE to 80, which when bit shifted
    //      twice due to REG34, will return 320
    //{0x31, 0x50},

    // Set VOUTSIZE to 120, which when bit shifted
    //      once due to REG34, will return 240
    {0x32, 0x78},

    //{0x0C, 0x42},

    // Turn on Test Pattern
    //{0x38, 0x17},
    //{0x84, 0x02},
};*/





#endif
